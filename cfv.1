.TH cfv 1 "5 Mar 2002"
.SH NAME
cfv \- Verify file concistency with .sfv, .csv, md5sum, or par files
.SH SYNOPSIS
.B cfv [-p dir] [-v|-V|-VV] [-r|-rr|-R] [-n|-N] [--renameformat <s>] [-zz|-z|-Z|-ZZ] [-T|-C] [-m|-M] [-i|-I] [-u|-U] [--fixpaths <s>] [--showpaths <i>] [--list/--list0 <l>] [-t type] [-f file] [files...]
.SH DESCRIPTION
.B cfv
verifies that the files you have are the same as those that the were used to create
the checksum file.
.SH OPTIONS
.PP
.IP "-v"
Enable printing of extra messages.
.IP "-V"
Disable printing of extra messages. (default)
.IP "-VV"
Like -V, but don't print status line at end either.
.IP "-q"
Like -VV, but not even error messages are printed.  Check the exit status.
.IP "-r"
Recursive mode 1.  In create mode, make seperate chksum files for each dir.
.IP "-rr"
Recursive mode 2.  In create mode make a single file with deep listing in it.
Both recursive modes are equivilant for test mode.
.IP "-R"
Disable recursive mode (default)
.IP "-T"
Set test mode. (default)
.IP "-C"
Set create mode.
.IP "-m"
Check only for missing files (don't compare checksums)
.IP "-M"
Check checksums (default)
.IP "-n"
Rename bad files
.IP "-N"
Don't rename bad files (default)
.IP "--renameformat string"
Format string to use with -n option.  Simply, put any of the 4 strings %(fullname)s, %(name)s, %(ext)s, and %(count)i in the format string, along with whatever other text you wish.
.br
The default is '%(name)s.bad-%(count)i%(ext)s'
.br
In detail, this is a standard python format string with mapping that contains
{'fullname': original filename, 'name': fullname minus extension, 'ext': extension(including .), 'count': rename attempt}.
If the format string does not contain count, then cfv will append '-%(count)i' to the filename if the first attempt fails.
.IP "-i"
Ignore case.  Currently has no effect in create mode.
.IP "-I"
Don't ignore case (default)
.IP "-u"
Show unverified files.  Currently has no effect in create mode.
.IP "-U"
Don't show unverified files (default)
.IP "-zz"
Force making/reading checksum files as gzipped files, even if not ending in .gz (mainly useful for "-f -")
.IP "-z"
Make gzipped files in create mode.
.IP "-Z"
Don't create gzipped files automatically. (default)
.IP "-ZZ"
Never use gzip, even if file ends in ".gz".
.IP "--fixpaths string"
Convert all occurances of any characters in string to the dir seperator for the current platform.  No effect in create mode. Use an empty string to disable.
.IP "-strippaths VAL"
Strip NUM leading components from file names in test mode.  Similar to the -p/--strip options of patch. 
VAL may be 'none': leave exactly as is, 'all': strip everything but the filename, 0: strip the leading driveletter/slash (if any), 1+: strip this many path components in addition.  
The default is 0.
.IP "--showpaths VAL"
Show paths in displayed filenames.
VAL should be one of yes/1/no/0/auto/2 or absolute/relative, or one from first list and one from second joined by a -.
For backwards compatability, 1=yes, 0=none, 2=auto.
The default is auto-relative.
Abrieviations are accepted.
Examples: --showpaths=y-a always shows absolute paths.  --showpaths=n never shows paths.
.IP "-p dir"
Change to directory before doing anything.
.IP "-f file"
Specify the name of the checksum file to test or create.
.IP "-t type"
Specify the type of the file.  Can be sfv, csv, csv2, csv4, md5, bsdmd5, par, or auto.  The default is auto,
which will detect the file type for you.  When creating, if type is auto an sfv
will be made, unless a different default has been set in the config file.
.IP "--list listset"
Prints a raw listing of files in the given set (ok, bad, unverified, notfound).  Usually used with -q, but not strictly needed since specifying --list will redirect all other messages to stderr.
.IP "--list0 listset"
Like --list but files are seperated by a null char.  Useful in combination with xargs -0.
.IP "-h/--help"
Print help info.
.IP "--version"
Print version of cfv and modules it uses.
.P
.B sfv
is a simple file verify format file
.br
.B csv
is a comma seperated value file, with the fields being name,size,crc32,
.br
.B csv2
is a comma seperated value file, with the fields being name,size,
.br
.B md5
is md5sum format file
.br
.B bsdmd5
is md5 format file
.br
.B par
is parchive format file (test-only)
.SH EXIT STATUS
The exit status of cfv can be examined to determine what kind of errors, if any, occured.
.P
An exit status of 1 indictates a command line argument error, or an unhandled exception.
.P
Otherwise, the exit status will be a bitwise OR of:
.IP 2
badcrc (a file had a different checksum than listed in the checksum file)
.IP 4
badsize (a file had a different size than listed, only used in csv and csv4)
.IP 8
notfound (a file that was listed was not found)
.IP 16
ferror (some other file error occured when trying to open/read a file)
.IP 32
unverified (a file was not verified, only with -u)
.IP 64
cferror (a checksum file was not found or not recognized)
.SH NOTES
Since different platforms represent the path seperator differently, using recursive mode 2 (-rr) is not recommended for anything other than personal usage.  Although the addition of the fixpaths option can be used to work around this, it isn't guaranteed that whatever program others user have will have a similar feature.
.SH EXAMPLES
If no options are specified, the default will be -T -t auto, and it will search the current directory for any sfv, csv, or md5sum files.
.br
.B
cfv
.P
Force the file to test:
.br
.B
cfv -f funny.name
.P
Test only the files you have, (avoid file not found errors):
.br
.B
cfv *
.P
Create a csv file for all the files in the current dir:
.br
.B
cfv -C -tcsv
.P
Create a csv file for only the zip files in the current dir, and specify the filename:
.br
.B
cfv -C -tcsv -fsomezips.csv *.zip
.P
Check if all files in current and subdirs are verified, but don't verify checksums of files that are.  (For example, before writing a directory to a cdr and you want to make sure all the files are verified.):
.br
.B
cfv -r -m -u
.SH CONFIGURATION
Upon startup, cfv will test for ~/.cfvrc and if it exists, read configuration information from it.
The file consists of any number of lines, each having a single option name and the value seperated by a space.
Empty lines and lines beginning with a # are ignored.
.SH EXAMPLE CONFIGURATION
#this is an example .cfvrc that specifies all the default options
.br
#don't be verbose (set to 1 for -v, 0 for -V, -1 for -VV)
.br
verbose 0
.br
#create sfv files by default
.br
default sfv
.br
#sort dir listings before creating a checksum file
.br
dirsort 1
.br
#sort command line specified files
.br
cmdlinesort 1
.br
#don't be recursive (set to 0 for -R,  1 for -r,  2 for -rr)
.br
recursive 0
.br
#don't show unverified files
.br
showunverified 0
.br
#don't ignore case
.br
ignorecase 0
.br
#don't fix any paths (note that there is a single space after fixpaths, thus the value it gets set to is an empty string)
.br
fixpaths 
.br
#A more useful example would be:
.br
#fixpaths /\\
.br
#don't strip leading directories (all to strip all path info, 0+ to strip the leading / and the first X components, none for nothing)
.br
strippaths 0
.br
#show full paths in recursive mode (set to 0 for never, 1 for always, 2 for only in recursive mode)
.br
showpaths 2
.br
#access checksum filenames that end with .gz as gzipped files (-1 for never, 0 for with .gz, and 1 to make -C make .gz files automatically)
.br
gzip 0
.br
#don't rename bad files
.br
rename 0
.br
#format to use for renaming bad files with -n
.br
renameformat %(name)s.bad-%(count)i%(ext)s
.SH FILES
.PP
.IP "~/.cfvrc"
cfv configuration file.  See configuration section.
.SH ENVIRONMENT
.PP
.IP "CFV_NOFCHKSUM"
Set to a non-empty value to disable usage of python-fchksum module.
.IP "CFV_NOMMAP"
Set to a non-empty value to disable usage of mmap.
.SH BUGS
Specifying the [files...] arguments when using recursive test mode probably does not do what you want it to.  (Comments or suggestions on desired behavior welcome.)
.PP
Show unverified files does not work correctly with checksum files that have deep listings (ie, ones made with -rr).
.SH AUTHOR
Matthew Mueller <donut@azstarnet.com>
.P
The latest version, and other programs I have written, are available from:
.br
http://www.azstarnet.com/~donut/programs/cfv.html
.SH "SEE ALSO"
.BR md5sum (1),
.BR md5 (1),
.BR xargs (1)
